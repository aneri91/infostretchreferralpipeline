package com.infostretch.referral.services;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.apache.velocity.app.VelocityEngine;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.ui.velocity.VelocityEngineUtils;

import com.infostretch.referral.commons.EmployeeReferralDTO;
import com.infostretch.referral.commons.Status;
import com.infostretch.referral.commons.StatusDTO;
import com.infostretch.referral.dao.EmployeeReferralDao;
import com.infostretch.referral.dao.UserDao;
import com.infostretch.referral.entity.EmployeeReferral;
import com.infostretch.referral.entity.User;
import com.infostretch.referral.utilities.SendMail;

@Service
public class EmployeeReferralService {

	@Autowired
	private EmployeeReferralDao employeeReferralDao;

	@Autowired
	private UserDao userDao;

	@Autowired
	private VelocityEngine velocityEngine;

	@Autowired
	private SendMail sendMail;

	public StatusDTO saveEmployeeReferral(
			EmployeeReferralDTO employeeReferralDTO) {
		StatusDTO status = new StatusDTO();
		EmployeeReferral employeeReferral = new EmployeeReferral();
		employeeReferral.setCandidateName(employeeReferralDTO
				.getCandidateName());
		employeeReferral.setEmail(employeeReferralDTO.getEmail());
		employeeReferral.setLinkedinUrl(employeeReferralDTO.getLinkedinUrl());
		employeeReferral.setPhone(employeeReferralDTO.getPhone());
		employeeReferral.setCreatedOn(new Date());
		employeeReferral.setUpdatedOn(new Date());
		User createdBy = userDao.findById(employeeReferralDTO.getCreatedBy());
		employeeReferral.setCreatedBy(createdBy);
		employeeReferralDao.save(employeeReferral);
		Map<String, Object> model = new HashMap<String, Object>();

		model.put("candidateName", employeeReferralDTO.getCandidateName());
		model.put("email", employeeReferralDTO.getEmail());
		model.put("phone", employeeReferralDTO.getPhone());
		model.put("linkedinUrl", employeeReferralDTO.getLinkedinUrl());
		model.put("createdOn", employeeReferral.getCreatedOn());
		model.put("createdBy", createdBy.getFirstname()+ " "+createdBy.getLastname());

		String body = VelocityEngineUtils.mergeTemplateIntoString(
				velocityEngine, "/templates/employeeReferralTemplate.vm",
				"UTF-8", model);
		String[] to = { "pratik.oza@infostretch.com",
				"aneri.parikh@infostretch.com",
				"vaibhavi.joshi@infostretch.com",
				"mudita.tiwari@infostretch.com",
				"pooja.arondekar@infostretch.com" };
		sendMail.sendEmail(to, body, "aneri.parikh@infostretch.com",
				"New Referral Information");
		status.setStatus(new Status("success"));
		return status;

	}
}
