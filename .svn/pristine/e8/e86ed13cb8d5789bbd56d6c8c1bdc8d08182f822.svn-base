package com.infostretch.referral.controller;

import org.apache.commons.lang.Validate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.infostretch.referral.commons.SalesReferralDTO;
import com.infostretch.referral.commons.StatusDTO;
import com.infostretch.referral.services.SalesReferralService;

/**
 * The Class SalesReferralController.<br/>
 * Validate<br/>
 * saving Sales Referrals Informations<br/>
 *
 * @author aneri.parikh
 *
 */
@Controller
public class SalesReferralController {

  /** The sales referral service. */
  @Autowired
  private SalesReferralService salesReferralService;

  /**
   * Instantiates a new sales referral controller.
   */
  public SalesReferralController() {
  }

  /**
   * Save sales referral.
   *
   * @param salesReferralDTO
   *          the sales referral dto
   * @return the status dto
   */
  @RequestMapping(value = "/salesreferral", method = RequestMethod.POST,
      consumes = "application/json")
  @ResponseBody
  public StatusDTO saveSalesReferral(@RequestBody final SalesReferralDTO salesReferralDTO) {
    try {
      // validation with mandatory fields
      Validate.notNull(salesReferralDTO.getContactName(), "Enter contact name");
      Validate.notNull(salesReferralDTO.getEmail(), "Enter email ");
      Validate.notNull(salesReferralDTO.getCompanyName(), "Enter company name ");

    } catch (final NullPointerException | IllegalArgumentException e) {
      return new StatusDTO(400, e.getMessage());
    }
    return this.salesReferralService.saveSalesReferral(salesReferralDTO);
  }

}
