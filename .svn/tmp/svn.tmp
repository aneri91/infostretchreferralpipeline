package com.infostretch.referral.controller;

import org.apache.commons.lang.Validate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.infostretch.referral.commons.EmployeeReferralDTO;
import com.infostretch.referral.commons.StatusDTO;
import com.infostretch.referral.services.EmployeeReferralService;

/**
 * The Class EmployeeReferralController.<br/>
 * Saving Employee Referrals information
 *
 * @author aneri.parikh
 */
@Controller
public class EmployeeReferralController {

  /** The employee referral service. */
  @Autowired
  private EmployeeReferralService employeeReferralService;

  /**
   * Instantiates a new employee referral controller.
   */
  public EmployeeReferralController() {
  }

  /**
   * Save employee referral.
   *
   * @param employeeReferralDTO
   *          the employee referral dto
   * @return the status dto
   */
  @RequestMapping(value = "/employeereferral", method = RequestMethod.POST,
      consumes = "application/json")
  @ResponseBody
  public StatusDTO saveEmployeeReferral(@RequestBody final EmployeeReferralDTO employeeReferralDTO) {
    try {
      // validation with mandatory fields
      Validate.notNull(employeeReferralDTO.getCandidateName(), "Invalid_candidateName");
      Validate.notNull(employeeReferralDTO.getEmail(), "Invalid_candidateEmail");
      Validate.notNull(employeeReferralDTO.getCreatedBy(), "Invalid_createdBy");

    } catch (final NullPointerException | IllegalArgumentException e) {
      return new StatusDTO(400, e.getMessage());
    }
    // saves Employee Referral information
    return this.employeeReferralService.saveEmployeeReferral(employeeReferralDTO);
  }
}
